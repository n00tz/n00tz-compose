version: "3.7"
services:
  plex:
    image: plexinc/pms-docker:${PLEX_VERSION}
    container_name: plex
    hostname: ${HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=http://${PLEX_ADVERTISE_IP}:${PLEX_WEB_PORT}
      - VERSION=${PLEX_VERSION}
    devices:
      - /dev/dri:/dev/dri
      - /dev/nvidia0:/dev/nvidia0
      - /dev/nvidiactl:/dev/nvidiactl
      - /dev/nvidia-modeset:/dev/nvidia-modeset
      - /dev/nvidia-uvm:/dev/nvidia-uvm
      - /dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools
    volumes:
      - plexconfig:/config
      - plextranscode:/transcode
      - /storage/audio:/audio
      - /storage/video:/video
      - /storage/photo:/photo:ro
    network_mode: host
    restart: unless-stopped

  # airsonic:

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    labels:
      - traefik.enable=true
      - traefik.port=${RADARR_PORT}
      - traefik.frontend.rule=Host:${RADARR_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configradarr:/config
      - ${VIDEO_DIR}:/video
      - ${DOWNLOAD_DIR}:/downloads
      - nullvol:/movies:ro # keep things clean on the docker host
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    labels:
      - traefik.enable=true
      - traefik.port=${SONARR_PORT}
      - traefik.frontend.rule=Host:${SONARR_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configsonarr:/config
      - ${VIDEO_DIR}:/video
      - nullvol:/tv:ro # keep things clean on the docker host
      - ${DOWNLOAD_DIR}:/downloads
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    labels:
      - traefik.enable=true
      - traefik.port=${LIDARR_PORT}
      - traefik.frontend.rule=Host:${LIDARR_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configlidarr:/config
      - ${AUDIO_DIR}/music:/music
      - ${DOWNLOAD_DIR}:/downloads
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    labels:
      - traefik.enable=true
      - traefik.port=${BAZARR_PORT}
      - traefik.frontend.rule=Host:${BAZARR_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configbazarr:/config
      - ${VIDEO_DIR}:/video
      - nullvol:/tv:ro # keep things clean on the docker host
      - nullvol:/movies:ro # keep things clean on the docker host
    restart: unless-stopped

  # mylar:

  # lazylibrarian:

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    labels:
      - traefik.enable=true
      - traefik.port=${JACKETT_PORT}
      - traefik.frontend.rule=Host:${JACKETT_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configjackett:/config
      - ${DOWNLOAD_DIR}:/downloads
    restart: unless-stopped

  rutorrent:
    image: linuxserver/rutorrent
    container_name: rutorrent
    labels:
      - traefik.enable=true
      - traefik.port=${RUTORRENT_WEB_PORT}
      - traefik.frontend.rule=Host:${RUTORRENT_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configrutorrent:/config
      - ${DOWNLOAD_DIR}:/downloads
    ports:
      - 5000:5000
      - 51413:51413
      - 6881:6881/udp
    restart: unless-stopped

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    labels:
      - traefik.enable=true
      - traefik.port=${OMBI_PORT}
      - traefik.frontend.rule=Host:${OMBI_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configombi:/config
    depends_on:
      - radarr
      - sonarr
      - lidarr
      - rutorrent
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    labels:
      - traefik.enable=true
      - traefik.port=${TAUTULLI_PORT}
      - traefik.frontend.rule=Host:${TAUTULLI_HOSTNAME}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - configtautulli:/config
      - logtautulli:/logs
    restart: unless-stopped
  


volumes:
  plexconfig:
  plextranscode:
    driver_opts:
      type: tmpfs
      device: tmpfs
  configradarr:
  configsonarr:
  configlidarr:
  configbazarr:
  configjackett:
  configrutorrent:
  configombi:
  configtautulli:
  logtautulli:
  nullvol: