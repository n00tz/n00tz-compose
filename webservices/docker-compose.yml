version: "3.7"
services:
  yopass-memcached:
    image: memcached
    container_name: yopass-memcached
    networks:
      - yopass
    restart: unless-stopped
  yopass:
    image: jhaals/yopass
    container_name: yopass
    command: "--memcached=yopass-memcached:11211"
    networks:
      - yopass
      - infrastructure_local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.yopass.entrypoints=http"
      - "traefik.http.routers.yopass.rule=Host(${YOPASS_HOSTNAMES})"
      - "traefik.http.routers.yopass.middlewares=https-redirect@file"
      - "traefik.http.routers.yopass-secure.entrypoints=https"
      - "traefik.http.routers.yopass-secure.rule=Host(${YOPASS_HOSTNAMES})"
      - "traefik.http.routers.yopass-secure.tls=true"
      - "traefik.http.routers.yopass-secure.tls.certresolver=http"
      - "traefik.http.routers.yopass-secure.service=yopass"
      - "traefik.http.services.yopass.loadbalancer.server.port=${YOPASS_PORT}"
    depends_on:
      - yopass-memcached
    restart: unless-stopped

  privatebin:
    image: privatebin/nginx-fpm-alpine
    container_name: privatebin
    volumes:
      - privatebindata:/srv/data
      - privatebinrun:/run
      - privatebintmp:/tmp
      - privatebinnginxtmp:/var/lib/nginx/tmp
    networks:
      - infrastructure_local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.privatebin.entrypoints=http"
      - "traefik.http.routers.privatebin.rule=Host(${PRIVATEBIN_HOSTNAMES})"
      - "traefik.http.routers.privatebin.middlewares=https-redirect@file"
      - "traefik.http.routers.privatebin-secure.entrypoints=https"
      - "traefik.http.routers.privatebin-secure.rule=Host(${PRIVATEBIN_HOSTNAMES})"
      - "traefik.http.routers.privatebin-secure.tls=true"
      - "traefik.http.routers.privatebin-secure.tls.certresolver=http"
      - "traefik.http.routers.privatebin-secure.service=privatebin"
      - "traefik.http.services.privatebin.loadbalancer.server.port=${PRIVATEBIN_PORT}"
    restart: unless-stopped
    
  projectsend:
    image: linuxserver/projectsend
    container_name: projectsend
    volumes:
      - projectsenddata:/data
      - projectsendconfig:/config
    networks:
      - infrastructure_local
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - MAX_UPLOAD=${PROJECTSEND_MAXUPLOAD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.projectsend.entrypoints=http"
      - "traefik.http.routers.projectsend.rule=Host(${PROJECTSEND_HOSTNAMES})"
      - "traefik.http.routers.projectsend.middlewares=https-redirect@file"
      - "traefik.http.routers.projectsend-secure.entrypoints=https"
      - "traefik.http.routers.projectsend-secure.rule=Host(${PROJECTSEND_HOSTNAMES})"
      - "traefik.http.routers.projectsend-secure.tls=true"
      - "traefik.http.routers.projectsend-secure.tls.certresolver=http"
      - "traefik.http.routers.projectsend-secure.service=projectsend"
      - "traefik.http.services.projectsend.loadbalancer.server.port=${PROJECTSEND_PORT}"
    restart: unless-stopped

    #  rstudio:
    #image: rocker/rstudio:latest
    #container_name: rstudio
    #volumes:
    #  - rstudiolocallib:/usr/local/lib/R
    #  - rstudiohome:/home/rstudio
    #networks:
    #  - infrastructure_local
    #environment:
    #  - DISABLE_AUTH=true
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.rstudio.entrypoints=http"
    #  - "traefik.http.routers.rstudio.rule=Host(${RSTUDIO_HOSTNAMES})"
    #  - "traefik.http.routers.rstudio.middlewares=https-redirect@file"
    #  - "traefik.http.routers.rstudio.middlewares=traefik-auth"
    #  - "traefik.http.routers.rstudio-secure.entrypoints=https"
    #  - "traefik.http.routers.rstudio-secure.rule=Host(${RSTUDIO_HOSTNAMES})"
    #  - "traefik.http.routers.rstudio-secure.tls=true"
    #  - "traefik.http.routers.rstudio-secure.tls.certresolver=http"
    #  - "traefik.http.routers.rstudio-secure.service=rstudio"
    #  - "traefik.http.services.rstudio.loadbalancer.server.port=${RSTUDIO_PORT}"
    #restart: unless-stopped    

  # codimd:

  # heimdall:

    #lychee:
    #image: ghcr.io/linuxserver/lychee:latest
    #container_name: lychee
    #volumes:
    #  - lycheeconf:/conf
    #  - lycheeuploads:/pictures
    #networks:
    #  - infrastructure_local
    #environment:
    #  - TZ=${TIMEZONE}
    #  - PUID=${PUID}
    #  - PGID=${PGID}
    #  #- APP_NAME=Laravel
    #  #- APP_ENV=local
    #  #- APP_DEBUG=true
    #  #- LOG_CHANNEL=stack
    #  - DB_HOST=mysql
    #  - DB_PORT=3306
    #  - DB_NAME=lychee
    #  - DB_USER=lychee
    #  - DB_PASS=${LYCHEE_MYSQL_DBPASS}
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.lychee.entrypoints=http"
    #  - "traefik.http.routers.lychee.rule=Host(${LYCHEE_HOSTNAMES})"
    #  - "traefik.http.routers.lychee.middlewares=https-redirect@file"
    #  - "traefik.http.routers.lychee-secure.entrypoints=https"
    #  - "traefik.http.routers.lychee-secure.rule=Host(${LYCHEE_HOSTNAMES})"
    #  - "traefik.http.routers.lychee-secure.tls=true"
    #  - "traefik.http.routers.lychee-secure.tls.certresolver=http"
    #  - "traefik.http.routers.lychee-secure.service=lychee"
    #  - "traefik.http.services.lychee.loadbalancer.server.port=${LYCHEE_PORT}"
    #restart: unless-stopped

  hedgedoc:
    image: ghcr.io/linuxserver/hedgedoc:latest
    container_name: hedgedoc
    volumes:
      - hedgeconfig:/config
    networks:
      - infrastructure_local
    environment:
      - DB_HOST=mysql
      - DB_USER=hedgedoc
      - DB_PASS=${HEDGEDOC_MYSQL_DBPASS}
      - DB_NAME=hedgedoc
      - DB_PORT=3306
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TIMEZONE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hedgedoc.entrypoints=http"
      - "traefik.http.routers.hedgedoc.rule=Host(${HEDGEDOC_HOSTNAMES})"
      - "traefik.http.routers.hedgedoc.middlewares=https-redirect@file"
      - "traefik.http.routers.hedgedoc-secure.entrypoints=https"
      - "traefik.http.routers.hedgedoc-secure.rule=Host(${HEDGEDOC_HOSTNAMES})"
      - "traefik.http.routers.hedgedoc-secure.tls=true"
      - "traefik.http.routers.hedgedoc-secure.tls.certresolver=http"
      - "traefik.http.routers.hedgedoc-secure.service=hedgedoc"
      - "traefik.http.services.hedgedoc.loadbalancer.server.port=${HEDGEDOC_PORT}"
    restart: unless-stopped

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: cloudbeaver
    networks:
      - infrastructure_local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cloudbeaver.entrypoints=http"
      - "traefik.http.routers.cloudbeaver.rule=Host(${CLOUDBEAVER_HOSTNAMES})"
      - "traefik.http.routers.cloudbeaver.middlewares=https-redirect@file"
      - "traefik.http.routers.cloudbeaver-secure.entrypoints=https"
      - "traefik.http.routers.cloudbeaver-secure.rule=Host(${CLOUDBEAVER_HOSTNAMES})"
      - "traefik.http.routers.cloudbeaver-secure.tls=true"
      - "traefik.http.routers.cloudbeaver-secure.tls.certresolver=http"
      - "traefik.http.routers.cloudbeaver-secure.service=cloudbeaver"
      - "traefik.http.services.cloudbeaver.loadbalancer.server.port=${CLOUDBEAVER_PORT}"
    volumes:
      - dbeaverdata:/opt/cloudbeaver/workspace
    restart: unless-stopped

  speedtest:
    image: adolfintel/speedtest
    container_name: speedtest
    networks:
      - infrastructure_local
    environment:
      - TITLE=${SPEEDTEST_TITLE}
      - TELEMETRY=true
      - PASSWORD=${SPEEDTEST_PASS}
      - EMAIL=${EMAIL}
      - IPINFO_APIKEY=${SPEEDTEST_IPINFO_APIKEY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.speedtest.entrypoints=http"
      - "traefik.http.routers.speedtest.rule=Host(${SPEEDTEST_HOSTNAMES})"
      - "traefik.http.routers.speedtest.middlewares=https-redirect@file"
      - "traefik.http.routers.speedtest-secure.entrypoints=https"
      - "traefik.http.routers.speedtest-secure.rule=Host(${SPEEDTEST_HOSTNAMES})"
      - "traefik.http.routers.speedtest-secure.tls=true"
      - "traefik.http.routers.speedtest-secure.tls.certresolver=http"
      - "traefik.http.routers.speedtest-secure.service=speedtest"
      - "traefik.http.services.speedtest.loadbalancer.server.port=${SPEEDTEST_PORT}"
    restart: unless-stopped

  # bigbluebutton:

volumes:
  privatebindata:
  privatebinrun:
  privatebintmp:
  privatebinnginxtmp:
  projectsenddata:
  projectsendconfig:
          #  rstudiolocallib:
          #  rstudiohome:
  dbeaverdata:
  hedgeconfig:

networks:
  infrastructure_local:
    external: true
  yopass: