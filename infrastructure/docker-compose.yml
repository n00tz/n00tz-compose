version: "3.7"
services:
  traefik:
    image: traefik:chevrotin
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(${TRAEFIK_HOSTNAMES})"
      - "traefik.http.routers.traefik.middlewares=https-redirect@file"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(${TRAEFIK_HOSTNAMES})"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=http"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_AUTHS}"
    command:
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # Traefik metrics entryPoint
      - "443:443"   # TLS/SSL enable port
      - "25:25"     # SMTP tcp
      - "3306:3306" # MySQL tcp
      - "1433:1433" # MSSQL tcp
      - "1022:1022" # Git SSH tcp
    networks:
      - local
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/config.yml:/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # So that Traefik can listen to the Docker events
      - certs:/letsencrypt
    restart: always

  smtp:
    build: ./smtp
    container_name: smtp
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.smtp.entrypoints=smtp"
      - "traefik.tcp.routers.smtp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.smtp.service=smtp"
      - "traefik.tcp.routers.smtp.tls=false"
      - "traefik.tcp.services.smtp.loadbalancer.server.port=${INF_SMTP_PORT}"
      - "traefik.tcp.services.smtp.loadbalancer.terminationdelay=100"
    networks:
      - local
    environment:
      - RELAY_NETWORKS= :10.0.0.0/8:172.16.0.0/12:192.168.0.0/16
      - MAILNAME=${SMTP_MAILNAME}
    restart: unless-stopped
  
  awxweb:
    image: ansible/awx:latest
    container_name: awx_web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.awx.entrypoints=http"
      - "traefik.http.routers.awx.rule=Host(${AWX_HOSTNAMES})"
      - "traefik.http.routers.awx.middlewares=https-redirect@file"
      - "traefik.http.routers.awx-secure.entrypoints=https"
      - "traefik.http.routers.awx-secure.rule=Host(${AWX_HOSTNAMES})"
      - "traefik.http.routers.awx-secure.tls=true"
      - "traefik.http.routers.awx-secure.tls.certresolver=http"
      - "traefik.http.routers.awx-secure.service=ansible"
      - "traefik.http.services.ansible.loadbalancer.server.port=${AWX_WEB_PORT}"
    depends_on:
      - awxredis
      - awxpostgres
    user: root
    restart: unless-stopped
    volumes:
      - awxsupervisor-socket:/var/run/supervisor
      - awxrsyslog-socket:/var/run/awx-rsyslog/
      - awxrsyslog-config:/var/lib/awx/rsyslog/
      - "./awx/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./awx/environment.sh:/etc/tower/conf.d/environment.sh"
      - "./awx/credentials.py:/etc/tower/conf.d/credentials.py"
      - "./awx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - awxredis_socket:/var/run/redis/:rw
    networks:
      - local
    environment:
      - AWX_ADMIN_USER=${AWX_ADMIN_USER}
      - AWX_ADMIN_PASSWORD=${AWX_ADMIN_PASSWORD}
      - DATABASE_USER=${AWX_PG_USERNAME}
      - DATABASE_NAME=${AWX_PG_DATABASE}
      - DATABASE_HOST='awx_postgres'
      - DATABASE_PORT='5432'
      - DATABASE_PASSWORD=${AWX_PG_PASSWORD}


  awxtask:
    image: ansible/awx:latest
    container_name: awx_task
    depends_on:
      - awxredis
      - awxweb
      - awxpostgres
    command: /usr/bin/launch_awx_task.sh
    user: root
    restart: unless-stopped
    volumes:
      - awxsupervisor-socket:/var/run/supervisor
      - awxrsyslog-socket:/var/run/awx-rsyslog/
      - awxrsyslog-config:/var/lib/awx/rsyslog/
      - "./awx/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "./awx/environment.sh:/etc/tower/conf.d/environment.sh"
      - "./awx/credentials.py:/etc/tower/conf.d/credentials.py"
      - awxredis_socket:/var/run/redis/:rw
    networks:
      - local
    environment:
      - http_proxy=''
      - https_proxy=''
      - no_proxy=''
      - SUPERVISOR_WEB_CONFIG_PATH='/etc/supervisord.conf'
      - AWX_ADMIN_USER=${AWX_ADMIN_USER}
      - AWX_ADMIN_PASSWORD=${AWX_ADMIN_PASSWORD}
      - DATABASE_USER=${AWX_PG_USERNAME}
      - DATABASE_NAME=${AWX_PG_DATABASE}
      - DATABASE_HOST='awx_postgres'
      - DATABASE_PORT='5432'
      - DATABASE_PASSWORD=${AWX_PG_PASSWORD}
  
  awxredis:
    image: redis
    container_name: awx_redis
    restart: unless-stopped
    command: ["/usr/local/etc/redis/redis.conf"]
    volumes:
      - "./awx/redis.conf:/usr/local/etc/redis/redis.conf:ro"
      - awxredis_socket:/var/run/redis/:rw
    networks:
      - local
    environment:
      - http_proxy=''
      - https_proxy=''
      - no_proxy=''

  awxpostgres:
    image: postgres:10
    container_name: awx_postgres
    restart: unless-stopped
    volumes:
      - awxpostgres-data:/var/lib/postgresql/data:Z
    networks:
      - local
    environment:
      - POSTGRES_USER=${AWX_PG_USERNAME}
      - POSTGRES_PASSWORD=${AWX_PG_PASSWORD}
      - POSTGRES_DB=${AWX_PG_DATABASE}
      - http_proxy=''
      - https_proxy=''
      - no_proxy=''

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.git.entrypoints=http"
      - "traefik.http.routers.git.rule=Host(${GIT_HOSTNAMES})"
      - "traefik.http.routers.git.middlewares=https-redirect@file"
      - "traefik.http.routers.git-secure.entrypoints=https"
      - "traefik.http.routers.git-secure.rule=Host(${GIT_HOSTNAMES})"
      - "traefik.http.routers.git-secure.tls=true"
      - "traefik.http.routers.git-secure.tls.certresolver=http"
      - "traefik.http.routers.git-secure.service=gitea"
      - "traefik.http.services.gitea.loadbalancer.server.port=${GIT_WEB_PORT}"
      - "traefik.tcp.routers.git.entrypoints=gitssh"
      - "traefik.tcp.routers.git.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.git.service=gitea"
      - "traefik.tcp.routers.git.tls=false"
      - "traefik.tcp.services.gitea.loadbalancer.server.port=${GIT_SSH_PORT}"
      - "traefik.tcp.services.gitea.loadbalancer.terminationdelay=100"
    networks:
      - local
    volumes:
      - giteadata:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - USER_UID=${PUID}
      - USER_GID=${PGID}
    restart: unless-stopped

  # drone:

  # redis:

  mysql:
    image: mariadb:10
    container_name: mysql
    networks:
      - local
    environment:
      - MYSQL_ROOT_PASSWORD=${INF_MYSQL_ROOT_PW}
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mysql.entrypoints=mysql"
      - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mysql.service=mysql"
      - "traefik.tcp.routers.mysql.tls=false"
      - "traefik.tcp.services.mysql.loadbalancer.server.port=${INF_MYSQL_PORT}"
      - "traefik.tcp.services.mysql.loadbalancer.terminationdelay=100"
    volumes:
      - mysqldata:/var/lib/mysql
    restart: unless-stopped

  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: mssql
    networks:
      - local
    environment:
      - SA_PASSWORD=${INF_MSSQL_SA_PW}
      - MSSQL_PID=Developer
      - ACCEPT_EULA=Y
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mssql.entrypoints=mssql"
      - "traefik.tcp.routers.mssql.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mssql.service=mssql"
      - "traefik.tcp.routers.mssql.tls=false"
      - "traefik.tcp.services.mssql.loadbalancer.server.port=${INF_MSSQL_PORT}"
      - "traefik.tcp.services.mssql.loadbalancer.terminationdelay=100"
    volumes:
      - mssqldata:/var/opt/mssql
    restart: unless-stopped

volumes:
  certs:
  awxsupervisor-socket:
  awxrsyslog-socket:
  awxrsyslog-config:
  awxredis_socket:
  awxpostgres-data:
  giteadata:
  mysqldata:
  mssqldata:
networks:
  local: